name: "Test IZE"

env:
  AWS_REGION: us-east-1
  ENV: testnut
  NAMESPACE: nutcorp
  AWS_PROFILE: default

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  Build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Ize build
        run: go build -o ./ize ./cmd

      - name: Install docker # Taken from https://github.com/actions/virtual-environments/issues/1143#issuecomment-652264388
        run: |
          brew install --cask docker docker_app_path=$(brew list --cask docker | grep '==> App' -A1 | tail -n 1 | awk '{ print $1 }') 
          docker_app_path="${docker_app_path/#\~/$HOME}"
          sudo "$docker_app_path"/Contents/MacOS/Docker --unattended --install-privileged-components
          open -a "$docker_app_path" --args --unattended --accept-license
          while ! "$docker_app_path"/Contents/Resources/bin/docker info &>/dev/null; do sleep 1; done
      - name: Run builded ize
        run: |
          mkdir -p ~/.aws && echo -e "[${AWS_PROFILE}]\naws_access_key_id = ${AWS_ACCESS_KEY_ID}\naws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}\nregion = ${AWS_REGION}" >> ~/.aws/credentials
          cat ~/.aws/credentials
          cd examples/simple-monorepo
          ${GITHUB_WORKSPACE}/ize --log-level=debug terraform init
