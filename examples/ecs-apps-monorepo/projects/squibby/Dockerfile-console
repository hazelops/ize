FROM golang:1.12-alpine as builder
ARG VERSION=2.3.930.0
RUN set -ex && apk add --no-cache make git gcc libc-dev curl bash && \
    curl -sLO https://github.com/aws/amazon-ssm-agent/archive/${VERSION}.tar.gz && \
    mkdir -p /go/src/github.com && \
    tar xzf ${VERSION}.tar.gz && \
    mv amazon-ssm-agent-${VERSION} /go/src/github.com/amazon-ssm-agent && \
    cd /go/src/github.com/amazon-ssm-agent && \
    echo ${VERSION} > VERSION && \
    gofmt -w agent && make checkstyle || ./Tools/bin/goimports -w agent && \
    make build-linux

FROM python:3.7-alpine

ARG PROJECT_PATH=.
ENV \
APP_HOME=/app  \
PORT=3000 \
APP_NAME=Default

# Adding ssm
RUN set -ex && apk add --no-cache sudo ca-certificates && \
    adduser -D ssm-user && echo "ssm-user ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/ssm-agent-users && \
    mkdir -p /etc/amazon/ssm
COPY --from=builder /go/src/github.com/amazon-ssm-agent/bin/linux_amd64/ /usr/bin
COPY --from=builder /go/src/github.com/amazon-ssm-agent/bin/amazon-ssm-agent.json.template /etc/amazon/ssm/amazon-ssm-agent.json
COPY --from=builder /go/src/github.com/amazon-ssm-agent/bin/seelog_unix.xml /etc/amazon/ssm/seelog.xml
COPY ${PROJECT_PATH}/entrypoint.sh /usr/bin/entrypoint.sh
RUN chmod +x /usr/bin/entrypoint.sh

# App
WORKDIR $APP_HOME
RUN set -ex && \
    apk add --no-cache \
    python3 \
    bash \
    curl \
  && \
    ln -s /usr/bin/python3 /usr/bin/python

#Copy files and pipenv
COPY ${PROJECT_PATH}/app.py  ./
COPY ${PROJECT_PATH}/Pipfile* ./

RUN python3 -m pip install pipenv
RUN pipenv install --deploy --system

EXPOSE $PORT
EXPOSE 22
ENTRYPOINT ["entrypoint.sh"]
